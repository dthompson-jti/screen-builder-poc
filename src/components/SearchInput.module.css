/* src/components/SearchInput.module.css */

/*
  FIX: The @layer wrapper is removed. CSS Modules are not part of the 'base'
  layer by default, so their higher precedence is now guaranteed by the
  architecture set up in index.css.
*/

/* This is the SINGLE, UNIFIED wrapper for the entire component.
   It is the ONLY element that receives a border, background, or focus ring.
   It uses flexbox to guarantee the icon and input are aligned on one row. */
.wrapper {
  display: flex;
  flex: 1; /* Allows the component to fill its container */
  align-items: center;
  gap: var(--spacing-2);
  padding: var(--spacing-1p5) var(--spacing-3);
  border-radius: 6px;
  border: 1px solid transparent; /* Default to transparent */
  transition: border-color 0.2s, box-shadow 0.2s, background-color 0.2s;
  /* FIX: Enforce a fixed height to prevent any layout/alignment shift when the clear button appears. */
  /* This value aligns with the standard 38px height of secondary buttons. */
  height: 38px;
}

/* --- Standalone Variant (Left Panel) --- */
/* This variant gets the visible background and a single, clean border. */
.wrapper[data-variant="standalone"] {
  background-color: var(--surface-bg-primary);
  border-color: var(--surface-border-primary);
}
.wrapper[data-variant="standalone"]:hover {
  border-color: var(--surface-border-secondary-hover);
}
/* The focus state applies ONLY to this single outer wrapper. */
.wrapper[data-variant="standalone"].focused {
  border-color: var(--surface-border-theme);
  box-shadow: 0 0 0 2px var(--control-focus-ring-standard);
}

/* --- Integrated Variant (Popovers) --- */
/* This variant is completely transparent and has NO border or focus state. */
.wrapper[data-variant="integrated"] {
  background-color: transparent;
  padding: 0; /* Remove padding for a seamless look */
  border-color: transparent;
}
.wrapper[data-variant="integrated"].focused {
  box-shadow: none;
  border-color: transparent;
}


/* --- Common Child Styles --- */
.wrapper .material-symbols-rounded {
  color: var(--surface-fg-quaternary);
}

/* The actual input element is ALWAYS visually naked.
   This is the critical fix that kills the double-border bug. */
.wrapper input {
  /*
    FIX: Use `all: unset` as a "firewall" to block all global styles
    from forms.css (like borders, backgrounds, and box-shadows).
    This is now guaranteed to work because of the cascade layer.
  */
  all: unset;

  /* Re-apply necessary styles after the reset */
  font-family: var(--font-family-sans);
  font-size: 0.9em;
  color: var(--surface-fg-primary);
  width: 100%;
  flex: 1;
  box-sizing: border-box; /* Good practice for inputs */
}

.wrapper input::placeholder {
  color: var(--control-fg-placeholder);
}

.clearButton {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 28px;
  width: 28px;
  padding: var(--spacing-1p5);
  background: none;
  border: 1px solid transparent;
  color: var(--surface-fg-secondary);
  border-radius: var(--spacing-2);
  cursor: pointer;
  /* FIX: Remove transform from transition as it is no longer used. */
  transition: background-color 0.2s, color 0.2s, border-color 0.2s;
}
.clearButton:hover:not(:disabled) {
  background-color: var(--control-bg-tertiary-hover); 
  color: var(--control-fg-tertiary-hover);
  /* The 'x' button inside searches should also take on this style. */
  border-color: var(--quaternary-border-color-on-hover, transparent);
}
.clearButton:active:not(:disabled) {
  /* FIX: Remove transform. */
  background-color: var(--control-bg-tertiary-pressed);
  color: var(--control-fg-tertiary-hover);
}

.visuallyHidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}