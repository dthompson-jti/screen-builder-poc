/* src/components/Select.module.css */

.selectTrigger {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: var(--spacing-1);
  font-family: var(--font-family-sans);
  width: 100%;
  height: 38px;
  padding: var(--spacing-2) var(--spacing-3);
  border: 1px solid var(--surface-border-primary);
  border-radius: 6px;
  font-size: 0.9em;
  background-color: var(--surface-bg-primary);
  color: var(--surface-fg-primary);
  outline: none;
  /* FIX: Reverted transition to remove 'margin' as it's no longer used for focus. */
  transition: border-color 0.2s, box-shadow 0.2s;
  cursor: pointer;
  position: relative;
}

.selectTrigger:hover {
  border-color: var(--control-border-tertiary-hover);
}

/* Use the standard outer box-shadow for focus. */
.selectTrigger[data-state='open'], 
.selectTrigger:focus-visible,
.selectTrigger[data-focused='true'] {
  border-color: var(--surface-border-theme);
  box-shadow: 0 0 0 2px var(--control-focus-ring-standard);
}

.selectIcon {
  color: var(--surface-fg-tertiary);
  transition: transform 0.2s ease;
}

.selectTrigger[data-state='open'] .selectIcon {
  transform: rotate(180deg);
}


/* The content container now only handles component-specific layout (width). */
/* All visual styling (bg, border, shadow) comes from the global .menu-popover class. */
.selectContent {
  width: var(--radix-select-trigger-width);
  overflow: hidden;
}

.selectViewport {
  max-height: 256px;
}

/* The decorative icon, rendered when an item is not checked */
.selectItemIcon {
  color: var(--surface-fg-secondary);
  font-size: 18px;
  font-variation-settings: 'opsz' 18;
}

/* When the item is checked, Radix adds an ItemIndicator. We hide our decorative icon. */
.menu-item[data-state='checked'] .selectItemIcon {
  display: none;
}